# Build the images for the main branch
name: Images

# Controls when the action will run.
on:
  # Trigger when the main branch is updated
  push:
    branches: [main]

# Ensure that only one instance of the workflow is run at a time for each branch/tag.
# Jobs currently running on the branch/tag will be cancelled when new commits are pushed.
# See https://docs.github.com/en/actions/learn-github-actions/workflow-syntax-for-github-actions#concurrency.
concurrency:
  # `github.workflow` is the workflow name, `github.ref` is the current branch/tag identifier
  group: ${{ format('{0}:{1}', github.workflow, github.ref) }}
  cancel-in-progress: true

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # Build the docker images
  build_and_push:
    name: "Build and push image"

    # The type of runner that the job will run on
    runs-on: self-hosted

    # Run once for each of the platforms
    strategy:
      matrix:
        platform: ["generic", "nuc12wshi7"]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout Code
        uses: actions/checkout@v4

      # Setup docker buildx
      - name: üê≥ Set up docker buildx üê≥
        uses: docker/setup-buildx-action@v2
        with:
          driver-opts: |
            env.BUILDKIT_STEP_LOG_MAX_SIZE=-1
            env.BUILDKIT_STEP_LOG_MAX_SPEED=-1

      # Login to the docker repository
      - name: Login to the docker repository
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      # Ensure write permissions for group and other are NOT set
      # This is done to ensure consistency with the b script across all systems
      - name: Enforce file permissions
        run: chmod -Rv g-w,o-w docker/

      # Build the docker image
      - name: üê≥ Build and push the docker image üê≥
        uses: docker/build-push-action@v4
        with:
          pull: true
          tags: "nubots/nubots:${{ matrix.platform }}"
          file: docker/Dockerfile
          context: docker
          build-args: platform=${{ matrix.platform }}
          cache-from: type=registry,ref=nubots/nubots:${{ matrix.platform }}
          cache-to: type=inline
          push: true
