# Controls the minimum log level that NUClear log will display
log_level: INFO

# Y - Offset for ball position such that ball is approached with foot behind ball
ball_y_offset: 0.0

# Goal kick target should be behind line so goal kick position doesn't try position robot to kick ball out of goal when close to line
goal_target_offset: 0.5

# Distance from ball to walk to if approaching from a "bad" position
ball_approach_distance: 0.35

# Distance from ball to walk to if approaching from a "good" position
ball_kick_distance: 0.0

# Maximum angle error which indicates that robot is approaching from a "bad position"
max_angle_error: 45 * pi / 180

# Target further behind the ball when approaching from a "bad position"
max_error_y: 0.5
error_gain_perp: 0.4

# Sideways offset when approaching from in front of the ball
min_offset_y: 0.3
max_offset_y: 1.0

avoid_ball_offset: [0.25, 0.5, 0]

distance_behind_ball: 0.4

# Offset to prevent walking into the opponent when tackling
avoid_opponent_offset: 0.15
# Offset to approach the side of the ball when tackling
approach_offset: 0.6
# While angle error is larger than this, apply the offset to position next to the ball when tackling
tackle_angle_offset: 0.2

infront_of_ball_radius: 0.8
# Distance in front of the ball to check for obstacles
infront_check_distance: 1.5

# Radius to avoid obstacles when walking to the ball
obstacle_radius: 0.8

# Margin to subtract from goal width when calculating goal boundaries for obstacle avoidance
goal_width_margin: 0.2

# Error thresholds for determining when robot is ready to kick the ball
# X error threshold (parallel to ball-target vector) - robot should be behind ball
err_x_ok: 0.05
# Y error threshold (perpendicular to ball-target vector) - robot should be aligned laterally
err_y_ok: 0.1
# Heading error threshold - robot should be facing the target
err_z_ok: 15 * pi / 180
