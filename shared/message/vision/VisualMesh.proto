// MIT License
//
// Copyright (c) 2018 NUbots
//
// This file is part of the NUbots codebase.
// See https://github.com/NUbots/NUbots for further info.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.


syntax = "proto3";

package message.vision;

import "google/protobuf/timestamp.proto";
import "Matrix.proto";
import "message/platform/webots/messages.proto";
import "Transform.proto";

message VisualMesh {
    /// Time this message was created
    google.protobuf.Timestamp timestamp = 1;
    /// ID of the camera that this mesh was constructed from
    uint32 id = 2;
    /// name of the camera that this mesh was constructed from
    string name = 3;
    /// World to camera transform that this mesh was constructed with
    iso3 Hcw = 4;
    /// Pixel coordinates projected from the rays
    fmat coordinates = 5;
    /// Neighbours of each node in the mesh. Each row corresponds to a node and the columns are the neighbours
    imat neighbourhood = 6;
    /// The corresponding global indices for each on-screen node
    repeated int32 indices = 7 [packed = true];
    /// The classification for each pixel/ray. Each row corresponds to a pixel. Each column corresponds to a
    /// class. The mapping from columns to classes is dependant on how the classes were presented during training
    fmat classifications = 8;
    /// Full vector from the world to each point in the mesh, assuming the point is on the ground
    fmat rPWw = 9;
    /// Unit vector pointing from the camera to each node in the mesh, in world space
    fmat uPCw = 10;
    /// A mapping from class names to column indices (for accessing the corresponding classification column)
    map<string, uint32> class_map = 11;
    /// Ground truth data from webots
    platform.webots.VisionGroundTruth vision_ground_truth = 12;
}
