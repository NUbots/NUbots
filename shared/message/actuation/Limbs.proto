// MIT License
//
// Copyright (c) 2022 NUbots
//
// This file is part of the NUbots codebase.
// See https://github.com/NUbots/NUbots for further info.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.

syntax = "proto3";

package message.actuation;

import "message/actuation/ServoCommand.proto";

/// Left leg servo command information including time, gain, torque, position
message LeftLeg {
    /// Information for each servo in the left leg, with the key corresponding to ServoID
    map<uint32, ServoCommand> servos = 1;
}
message LeftLegSequence {
    repeated LeftLeg frames = 1;
}

/// Right leg servo command information including time, gain, torque, position
message RightLeg {
    /// Information for each servo in the right leg, with the key corresponding to ServoID
    map<uint32, ServoCommand> servos = 1;
}
message RightLegSequence {
    repeated RightLeg frames = 1;
}

/// Right and left leg servo command information including time, gain, torque, position
message Legs {
    /// Information for each servo in the legs, with the key corresponding to ServoID
    map<uint32, ServoCommand> servos = 1;
}
message LegsSequence {
    repeated Legs frames = 1;
}

/// Left arm servo command information including time, gain, torque, position
message LeftArm {
    /// Information for each servo in the left arm, with the key corresponding to ServoID
    map<uint32, ServoCommand> servos = 1;
}
message LeftArmSequence {
    repeated LeftArm frames = 1;
}

/// Right arm servo command information including time, gain, torque, position
message RightArm {
    /// Information for each servo in the right arm, with the key corresponding to ServoID
    map<uint32, ServoCommand> servos = 1;
}
message RightArmSequence {
    repeated RightArm frames = 1;
}

/// Left and right arm servo command information including time, gain, torque, position
message Arms {
    /// Information for each servo in the arms, with the key corresponding to ServoID
    map<uint32, ServoCommand> servos = 1;
}
message ArmsSequence {
    repeated Arms frames = 1;
}

/// Left and right arm and leg servo command information including time, gain, torque, position
message Limbs {
    /// Information for each servo in the arms and legs, with the key corresponding to ServoID
    map<uint32, ServoCommand> servos = 1;
}
message LimbsSequence {
    repeated Limbs frames = 1;
}

/// Head servo command information including time, gain, torque, position
message Head {
    /// Information for each servo in the head, with the key corresponding to ServoID
    map<uint32, ServoCommand> servos = 1;
}
message HeadSequence {
    repeated Head frames = 1;
}

/// Arms, legs and head servo command information including time, gain, torque, position
message Body {
    /// Information for each servo in the body, with the key corresponding to ServoID
    map<uint32, ServoCommand> servos = 1;
}
message BodySequence {
    repeated Body frames = 1;
}
