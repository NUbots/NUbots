// MIT License
//
// Copyright (c) 2023 NUbots
//
// This file is part of the NUbots codebase.
// See https://github.com/NUbots/NUbots for further info.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.

syntax = "proto3";

package message.platform;

import "google/protobuf/timestamp.proto";

/**
 * Represents a status return packet from a dynamixel device
 *
 * @author Alex Biddulph
 */
message StatusReturn {

    /// Error values
    enum CommandError {
        NO_ERROR          = 0;
        RESULT_FAIL       = 1;
        INSTRUCTION_ERROR = 2;
        CRC_ERROR         = 3;
        RANGE_ERROR       = 4;
        LENGTH_ERROR      = 5;
        LIMIT_ERROR       = 6;
        ACCESS_ERROR      = 7;
    }

    int32                     magic       = 1;  /// Magic number that heads up every packet
    int32                     id          = 2;  /// The ID of the device that we are communicating with
    int32                     length      = 3;  /// The total length of the data packet (4 plus the size of data)
    int32                     instruction = 4;  /// Will always be Instruction::STATUS_RETURN
    int32                     error       = 6;  /// Alert and Error number
    bytes                     data        = 8;  /// Expected return data
    int32                     checksum    = 9;  /// Our checksum for this command
    google.protobuf.Timestamp timestamp   = 10;
}
